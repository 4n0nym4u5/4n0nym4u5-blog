---
import {type Page, getCollection, type CollectionEntry} from 'astro:content';
import ListLayout from "@/layouts/ListLayout.astro";
import {ITEMS_PER_PAGE} from "@/consts";

interface Props {
    page: Page<CollectionEntry<'blog'>>;
    entry: CollectionEntry<'tags'>;
}

export async function getStaticPaths({paginate}) {
    const tags = await getCollection('tags');
    let posts = await getCollection('blog', post => {
        return !post.data.draft;
    })
    posts = posts.sort((a, b) => a.data.date.valueOf() - b.data.date.valueOf());

    return tags.flatMap(entry => {
        const tagPosts = posts.filter(post => post.data.tags.some(({slug}) => slug === entry.slug));
        return paginate(tagPosts, {pageSize: ITEMS_PER_PAGE, params: {slug: entry.slug}, props: {entry}});
    });
}

const {page, entry} = Astro.props;
const {Content} = await entry.render()
---

<ListLayout title={entry.data.name} description={entry.data.description} page={page}>
    <Content/>
</ListLayout>
